/*
 * intLoops.java
 *
 * Created on August 27, 2007, 1:47 AM
 */
import java.io.IOException;
import java.util.*;
import javax.swing.*;
import java.lang.Object;
import java.io.File;

/**
 *
 * @author  megumi
 */
public class JAR3DMultipleSequencesMultipleModelsWindowed extends javax.swing.JFrame {
    
     //my vars
	String fasta;
	String statusLabeltxt = "";
	int model;
	Vector alignment;
	Vector wholeAlignment;
	Vector models;
	Vector sequences;
    boolean modS = true;
    boolean seqS = true;
        
    /** Creates new form intLoops */
    public JAR3DMultipleSequencesMultipleModelsWindowed() {
    	alignment = new Vector();
    	wholeAlignment = new Vector();
		getFiles();
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */                      
    private void initComponents() {
        sequencePane = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        seqList = new javax.swing.JList();
        seqSel = new javax.swing.JButton();
        modelPanel = new javax.swing.JPanel();
        modelsPane = new javax.swing.JScrollPane();
        modList = new javax.swing.JList();
        modSel = new javax.swing.JButton();
        icon = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        alignPanel = new javax.swing.JPanel();
        alignPane = new javax.swing.JScrollPane();
        alignList = new javax.swing.JList();
        fiveprime = new javax.swing.JLabel();
        threeprime = new javax.swing.JLabel();
        alignButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        statusIcon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        sequencePane.setBorder(javax.swing.BorderFactory.createTitledBorder("Sequences"));
        seqList.setModel(new javax.swing.DefaultComboBoxModel() {
            
			public int getSize() { return sequences.size(); }
            
			public Object getElementAt(int i) { return sequences.get(i); }
        });
        jScrollPane1.setViewportView(seqList);

        seqSel.setText("Select All");
        seqSel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seqSelPressed(evt);
            }
        });

        javax.swing.GroupLayout sequencePaneLayout = new javax.swing.GroupLayout(sequencePane);
        sequencePane.setLayout(sequencePaneLayout);
        sequencePaneLayout.setHorizontalGroup(
            sequencePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sequencePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sequencePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                    .addComponent(seqSel))
                .addContainerGap())
        );
        sequencePaneLayout.setVerticalGroup(
            sequencePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sequencePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seqSel))
        );

        modelPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Models"));
        modList.setModel(new javax.swing.DefaultComboBoxModel() {
            
			public int getSize() { return models.size(); }
            
			public Object getElementAt(int i) { return models.get(i); }
        });
        modelsPane.setViewportView(modList);

        modSel.setText("Select All");
        modSel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modSelPressed(evt);
            }
        });

        javax.swing.GroupLayout modelPanelLayout = new javax.swing.GroupLayout(modelPanel);
        modelPanel.setLayout(modelPanelLayout);
        modelPanelLayout.setHorizontalGroup(
            modelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modelPanelLayout.createSequentialGroup()
                .addContainerGap(138, Short.MAX_VALUE)
                .addComponent(modSel)
                .addContainerGap())
            .addGroup(modelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(modelsPane, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        modelPanelLayout.setVerticalGroup(
            modelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(modelsPane, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modSel))
        );

        icon.setIcon(new javax.swing.JLabel() {
            
			public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("http://i13.tinypic.com/4zc7f9c.jpg")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        statusLabel.setText(statusLabeltxt);

        alignPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Alignment"));
        alignList.setModel(new javax.swing.DefaultComboBoxModel() {
            
			public int getSize() { return alignment.size(); }
            
			public Object getElementAt(int i) { return alignment.get(i); }
        });
        alignPane.setViewportView(alignList);

        fiveprime.setText("5'");

        threeprime.setText("3'");

        javax.swing.GroupLayout alignPanelLayout = new javax.swing.GroupLayout(alignPanel);
        alignPanel.setLayout(alignPanelLayout);
        alignPanelLayout.setHorizontalGroup(
            alignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alignPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(alignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(alignPanelLayout.createSequentialGroup()
                        .addComponent(fiveprime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 567, Short.MAX_VALUE)
                        .addComponent(threeprime))
                    .addComponent(alignPane, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE))
                .addContainerGap())
        );
        alignPanelLayout.setVerticalGroup(
            alignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alignPanelLayout.createSequentialGroup()
                .addGroup(alignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fiveprime)
                    .addComponent(threeprime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(alignPane, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        alignButton.setText("Align");
        alignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignButtonPressed(evt);
            }
        });

        jLabel1.setText("Ctrl+click to select multiple sequences and models.");

        statusIcon.setIcon(new javax.swing.JLabel() {
            
			public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("http://i17.tinypic.com/6d029nd.gif")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(sequencePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(modelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(alignButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(icon)
                                .addGap(16, 16, 16))))
                    .addComponent(alignPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(statusIcon)
                        .addGap(29, 29, 29)
                        .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sequencePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(icon)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(alignButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(modelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alignPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(statusIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        pack();
    }// </editor-fold>                        

    private void modSelPressed(java.awt.event.ActionEvent evt) {                               
        if(modS)
        {
        	int[] all = new int[models.size()];
        	for(int i = 0; i < models.size(); i++)
        		all[i] = i;
            modList.setSelectedIndices(all);
            modSel.setText("Deselect");
            modS = false;
        }
        else
        {
            modList.clearSelection();
            modSel.setText("Select All");
            modS = true;
        }        
    }                              

    private void seqSelPressed(java.awt.event.ActionEvent evt) {                               
        if(seqS)
        {
        	int[] all = new int[sequences.size()];
        	for(int i = 0; i < sequences.size(); i++)
        		all[i] = i;
            seqList.setSelectedIndices(all);
            seqSel.setText("Deselect");
            seqS = false;
        }
        else
        {
            seqList.clearSelection();
            seqSel.setText("Select All");
            seqS = true;
        }   
    }  


    private void alignButtonPressed(java.awt.event.ActionEvent evt) {
        try {
            loadAlignment();
        } catch (IOException e) {
            statusLabel.setText("Could not open alignment");
            //statusIcon.setIcon(http://i14.tinypic.com/63v2ih3.jpg);
            System.out.println("Could not open alignment");
            System.out.println(e);
        }
        initComponents();
    }
                                  
     public void loadAlignment() throws IOException
	 {
		 statusLabel.setText("Loading Alignment...");
		 
		 Vector seqNames = new Vector();
		 for(int i = 0; i < seqList.getSelectedValues().length; i++)
			 seqNames.add(seqList.getSelectedValues()[i]);
		 
		 Vector modNames = new Vector();
		 for(int i = 0; i < modList.getSelectedValues().length; i++)
			 modNames.add(modList.getSelectedValues()[i]);
		 
		 wholeAlignment = Alignment.getSortedAlignment(seqNames,modNames,100,10);
		 
		 /*for(int j = 0; j < modNames.size(); j++)
		 {
			 for(int k = 0; k < seqNames.size(); k++)
			 { // maybe need a vector of sequencedata to keep track of all scores
                 Vector sequenceData = Alignment.loadFasta((String)seqNames.get(k)); 

                 sequenceData = Alignment.doParse(sequenceData,100,(String)modNames.get(j),30);

                 alignment = Alignment.getAlignment(sequenceData);
                 
                 wholeAlignment.add("Alignment for model " + (String)modNames.get(j));
                 
                 for(int m = 0; m < alignment.size(); m++)
                	 wholeAlignment.add(alignment.get(m));
			 }
		 }*/
                 alignList = new JList(wholeAlignment);
                 alignList.setFont(new java.awt.Font("Lucida Console", 0, 11));
                 alignList.setModel(new javax.swing.AbstractListModel() {
                         public int getSize() { return wholeAlignment.size(); }
                         public Object getElementAt(int i) { return wholeAlignment.get(i); }
                 });
                 alignPane.setViewportView(alignList);
                 statusLabel.setText("Alignment Loaded");
		 repaint();
	 }

	 public void getFiles()
	 {	
		 String filedir ;
		 String curDir = System.getProperty("user.dir");
		 sequences = new Vector();
		 File f1 = new File ( curDir + "\\sequences" ) ;

		 // Get all the files and directory under your directory
		 File[] seqfiles = f1.listFiles();

		 for ( int i = 0 ; i < seqfiles.length ; i ++ ) {
			 if ( seqfiles[i].isFile() && seqfiles[i].getName().substring(seqfiles[i].getName().length()-5,seqfiles[i].getName().length()).equals("fasta"))
			 {
				 sequences.add(seqfiles[i].getName());
			 }
		 }

		 models = new Vector();
		 File f2 = new File ( curDir +"\\models" ) ;

		 // Get all the files and directory under your directory
		 File[] modfiles= f2.listFiles();

		 for ( int i = 0 ; i < modfiles.length ; i ++ ) {
			 if ( modfiles[i].isFile() && modfiles[i].getName().substring(0,2).equals("IL"))
			 {
				 models.add(modfiles[i].getName());
			 }
		 }    	
	 }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JAR3DMultipleSequencesMultipleModelsWindowed().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JButton alignButton;
    private javax.swing.JList alignList;
    private javax.swing.JScrollPane alignPane;
    private javax.swing.JPanel alignPanel;
    private javax.swing.JLabel fiveprime;
    private javax.swing.JLabel icon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList modList;
    private javax.swing.JButton modSel;
    private javax.swing.JPanel modelPanel;
    private javax.swing.JScrollPane modelsPane;
    private javax.swing.JList seqList;
    private javax.swing.JButton seqSel;
    private javax.swing.JPanel sequencePane;
    private javax.swing.JLabel statusIcon;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel threeprime;
    // End of variables declaration  
    
}
