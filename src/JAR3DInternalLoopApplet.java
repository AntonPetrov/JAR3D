import java.io.*;
import java.net.FileNameMap;
import java.net.URL;
import java.net.URLConnection;
import java.util.Vector;

/*
 * NewApplet.java
 *
 * Created on February 20, 2008, 2:39 PM
 */

/**
 *
 * @author  zirbel
 */
public class JAR3DInternalLoopApplet extends java.applet.Applet {
    
    /** Initializes the applet NewApplet */
    public void init() {
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
     }
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        textArea1 = new java.awt.TextArea();
        button1 = new java.awt.Button();
        textArea2 = new java.awt.TextArea();
        
        setLayout(new java.awt.BorderLayout());

        panel1.add(button1);
        panel1.add(textArea1);
        panel1.add(textArea2);
        
//        panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
//        panel1.add(textArea1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 310, 170));

        button1.setLabel("Align");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });
//        panel1.add(button1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 160, -1, -1));
//        panel1.add(label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 370, 100));

        add(panel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
		int numSequences = 100;
		int range        = 100;

		Vector sData = Alignment.parseFastaText(textArea1.getText(),0,0);

        String letters = ((Sequence)sData.get(1)).letters;
        int s = 0;
        for (int i = 0; i<letters.length(); i++)
        {
        	if (letters.charAt(i)=='*')
        		s++;
        }
        String loopType;
        if (s == 0)
          loopType = "HL";
        else if (s == 1)
          loopType = "IL";
        else if (s == 2)
          loopType = "JL";
        else
          loopType = "";
        
        Vector modnames = Sequence.getModelNames(loopType);
		
        Vector alignment;
        
        if (s == 0)
        	alignment = Alignment.getSortedHLAlignment(sData, modnames, numSequences, range);
          else if (s == 1)
        	alignment = Alignment.getSortedILAlignment(sData, modnames, numSequences, range);
          else if (s == 2)
// fix this later - add a procedure for junction loops that rotates them all three ways!
        	  alignment = Alignment.getSortedHLAlignment(sData, modnames, numSequences, range);
          else
          	alignment = Alignment.getSortedHLAlignment(sData, modnames, numSequences, range);
        
		String alnm = "";
		for(int i = 0; i < alignment.size(); i++)
			alnm += alignment.get(i)+"\n";
		textArea2.setText(alnm);
		textArea2.setFont(new java.awt.Font("Courier", 0, 10));
		//textArea2.setText(Alignment.tempdisplayAlignmentFASTA(sequenceData, numSequences));
    }//GEN-LAST:event_button1ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Panel panel1;
    private java.awt.TextArea textArea1;
    private java.awt.TextArea textArea2;
    // End of variables declaration//GEN-END:variables
    
}
